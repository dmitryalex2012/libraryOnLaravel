1. Filtering and pagination: https://www.youtube.com/watch?v=_d0h8QG2vTM

2. "Laratrust":
https://www.youtube.com/watch?v=08NNkh6gNt4
https://www.youtube.com/watch?v=wD3_QlNwAog
https://www.youtube.com/watch?v=hEjrUCEN3WY&list=PLwAKR305CRO_cukAejlt5kz3pTtDMW_Cd&index=21

3. Files (images) adding:
https://www.youtube.com/watch?v=NWfFL01rn9Q

4. Google auth:
https://www.youtube.com/watch?v=0y0N75gkLb4;
https://coderoad.ru/10456174/OAuth-%D0%BA%D0%B0%D0%BA-%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D1%82%D1%8C-%D1%81-%D0%BB%D0%BE%D0%BA%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%BC-URLs
    - register localhost URL in Google;
https://codeguida.com/post/678 - auth with Google and Facebook (text description).

5. API endpoints (Swagger 3):
https://www.youtube.com/watch?v=SDIukodcW7c;
https://blog.quickadminpanel.com/laravel-api-documentation-with-openapiswagger/
https://github.com/DarkaOnLine/L5-Swagger/wiki/Installation-&-Configuration:
https://starkovden.github.io/swagger-ui-tutorial.html.

P.S.
    1.  "composer require barryvdh/laravel-ide-helper:2.5.0" - for load "Laravel IDE Helper Generator" (generates helper files),
        "php artisan ide-helper:generate" - Automatic PHPDoc generation for Laravel Facades,
        "php artisan ide-helper:models" - Automatic PHPDocs for models
            for deleting "models" and "classes" errors in view files.

    2. For perform authentication using socials network:
           - install Socialite package using "composer require laravel/socialite" command;
           - make "localhost" as initial domain and "libraryOnLaravel.loc" as destination domain in aliases of openserver.
    3. For realization API endpoints:
           - install plugin Swagger 3 using " composer require "darkaonline/l5-swagger:7.* ";
           - run the command " php artisan vendor:publish --provider "L5Swagger\L5SwaggerServiceProvider" " for
               publishing L5-Swagger's config and view files into your project;
           - make controller (for example "BookController") using command "php artisan make:controller API\BooksController --api"
                and add "@OA\Get()" there;
           - generate interactive documentation using "php artisan l5-swagger:generate".